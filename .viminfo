# This viminfo file was generated by Vim 7.4.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=latin1


# hlsearch on (H) or off (h):
~H
# Last Search Pattern:
~Msle0~/);

# Last Substitute Search Pattern:
~MSle0&?

# Last Substitute String:
$

# Command Line History (newest to oldest):
:wq
:q
:WQ
:q!
:ew
:wq!
:s
:::
:wq:wq:
:!
::q
:NERDTree
:wqa
:w
:$
:qa
:help syntastic-checkers-c
:print syntastic-checkers-c
:syntastic-checkers-c
:help syntastic-recommended
:help syntaxstic-checkers
:.ll
:wa
:tabnew menu.c
:tabnew options.c
:tabnew optioins.c
:qa!
:!qa
:vsp reverseinput
:ClangFormatAutoDisable
:commentary
:set relativenumber
:wsa
:1
:tabnew options.h
:220
:tabnew helpers.c
:409
:tabnew menu.h
:o options.h
:sp
:207
:171
:tabnew main.h
:make 
:118
:tabnew main.c
:tabnew helpers.h
:sp helpers.c
:vsp helpers.c
:vsp menu.c
:51
:337
:wqa'
:sp options.h
:vsp main.h
:sp menu.h
:ConqueTerm bash
:make
:tabnew ~/.vim/colors/taffy.vim
:wqz
:ws
:'<,'>%s//
:'<,'>%s/\/\//
:!pwd
:>qa
:qa'
:ConqueTermVSplit fish
:a
:'<,'>qa
:tabnew ThreadPool.cpp
:browse tabnew
:tabnew Search.h
:tabnew Experiment.cpp
:162
:148
:130
:112
:113
:108
:%s/?//g
:%s/\?//g
:sp Data.h
:tabnew list.h
:199
:105
:254
:342
:236

# Search String History (newest to oldest):
? );
? \<str\>
? \<output\>
?/_s
?/choice
?/main
?/was
?/menu
?/malloc
?/print
?/matrix_sum
?/summat
?/othermat
?/matrix
?/invalid denom
?/guess
?/process_menu
?/init
? \<newreg\>
? \<request_count\>
?/return
?/skip_array
?/can
? \<tok_part\>
?/register
? \<denom_result\>
?/PUT
? \<process_change_requests\>
? \<quit_succ\>
?/ires
?/guess_a_number
?/process
? \<current_guess\>
? \<lreg\>
? \<skip_array\>
? \<l_reg_skip_array\>
? \<value_count\>
?/help
?/assert(FALSE)
? \<single_thread\>
? \<read_lock\>
?/read
?/lock
? \<writeLock\>
?/sleep
? \<publicLock\>
?/pthread
?/omment
?/ommend
? \<strdup\>
?/CHOIC
?/normal
?/MAX
? \<can_give_all_changes\>
?/runner
?/manyAllocations
? \<thread_run\>
?/thread_run
?/readUlock
? \<readUnlock\>
? \<freelistReader\>
?/NUM_ALLOCS
? \<justAlloc\>
?/create
? \<addReader\>
? \<findBestFit\>
? \<runner\>
?/unlock
? \<makeAllocations\>
? \<master\>
? \<readLock\>
?/read_
? \<THREADNUM\>
? \<alloc_firstFit\>
? \<waiting_readers\>
?/alloc_worker
? \<alloc_worker\>
? \<writing_mutex\>
? \<thread_lock\>
?/genData
? \<bestChunk\>
? \<worstFit\>
? \<alloc_thread\>
? \<freeReadLock\>
?/read'
? \<readLockStart\>
?/mutex

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Input Line History (newest to oldest):

# Registers:
""0	CHAR	0
	s
"1	LINE	0
	#include "main.h"
	
	#include "shared.h"
	#include <limits.h>
	#include <errno.h>
	#include <ctype.h>
	#include "options.h"
	/*#include "menu.c"*/
	
	/*added definitions*/
	#define SCREENWIDTH 80
	
	/**
	 * extracts the seed (a long int) from a string passed in
	 **/
	static long get_seed(const char strseed[]) {
	    char* end;
	    long result;
	#define DECIMAL 10
	    /* try to extract a long integer */
	    result = strtol(strseed, &end, DECIMAL);
	    /* check it is within the valid range */
	    if (errno == ERANGE) {
	
	        fprintf(stderr,
	                "Error: %s is outside the allowed range for a "
	                "long integer.\n",
	                strseed);
	        exit(IR_FAILURE);
	    }
	    /* search for any trailing characters */
	    while (isspace(*end)) {
	        ++end;
	    }
	    if (*end) {
	        fprintf(stderr, "Error: %s is not a valid seed.\n", strseed);
	        exit(IR_FAILURE);
	    }
	    return result;
	}
	
	enum {
	    MIN_ARGS = 1,
	    CORRECT_ARGS,
	    OVERFLOW_ARGS
	};
	
	#define SEED_ARG 1
	/**
	 * you are expected to READ the comments here and fill in your code BETWEEN the
"2	LINE	0
	#include <string.h>
	#include <time.h>
	
	#include "helpers.h"
	#include "shared.h"
	#ifndef OPTIONS_H
	#define OPTIONS_H
	
	/**
	 * the index of the cash register array that is occupied by each denomination,
	 *if there are any of that denomination
	 **/
	enum denom_ind {
	    FIVE_CENTS_IND,
	    TEN_CENTS_IND,
	    TWENTY_CENTS_IND,
	    FIFTY_CENTS_IND,
	    ONE_DOLLAR_IND,
	    TWO_DOLLAR_IND,
	    FIVE_DOLLAR_IND,
	    TEN_DOLLAR_IND
	};
	
	enum denom_val {
	    FIVE_CENTS_VAL = 5,
	    TEN_CENTS_VAL = 10,
	    TWENTY_CENTS_VAL = 20,
	    FIFTY_CENTS_VAL = 50,
	    ONE_DOLLAR_VAL = 100,
	    TWO_DOLLAR_VAL = 200,
	    FIVE_DOLLAR_VAL = 500,
	    TEN_DOLLAR_VAL = 1000
	};
	
	struct denomination {
	    enum denom_ind index;
	    enum denom_val value;
	    int count;
	};
	
	struct currency {
	    int dollars;
	    int cents;
	};
	
	#define NUM_DENOMS 8
	#define MAX_CHANGES 50
	
	typedef struct denomination cash_register[NUM_DENOMS];
	typedef struct currency change_requests[MAX_CHANGES];
"3	LINE	0
	#include <stdio.h>
	#include <math.h>
	#include <stdlib.h>
	#ifndef SHARED_H
	#define SHARED_H
	typedef enum boolean {
	    FALSE,
	    TRUE
	} BOOLEAN;
	#endif
"4	LINE	0
	#include "main.h"
	
	#include "shared.h"
	#include <limits.h>
	#include <errno.h>
	#include <ctype.h>
	#include "options.h"
	/*#include "menu.c"*/
	
	/*added definitions*/
	#define SCREENWIDTH 80
	
	/**
	 * extracts the seed (a long int) from a string passed in
	 **/
	static long get_seed(const char strseed[]) {
	    char* end;
	    long result;
	#define DECIMAL 10
	    /* try to extract a long integer */
	    result = strtol(strseed, &end, DECIMAL);
	    /* check it is within the valid range */
	    if (errno == ERANGE) {
	
	        fprintf(stderr,
	                "Error: %s is outside the allowed range for a "
	                "long integer.\n",
	                strseed);
	        exit(IR_FAILURE);
	    }
	    /* search for any trailing characters */
	    while (isspace(*end)) {
	        ++end;
	    }
	    if (*end) {
	        fprintf(stderr, "Error: %s is not a valid seed.\n", strseed);
	        exit(IR_FAILURE);
	    }
	    return result;
	}
	
	enum {
	    MIN_ARGS = 1,
	    CORRECT_ARGS,
	    OVERFLOW_ARGS
	};
	
	#define SEED_ARG 1
	/**
	 * you are expected to READ the comments here and fill in your code BETWEEN the
"5	LINE	0
	#include "menu.h"
"6	LINE	0
	#include <string.h>
	#include <time.h>
	
	#include "helpers.h"
	#include "shared.h"
	#ifndef OPTIONS_H
	#define OPTIONS_H
	
	/**
	 * the index of the cash register array that is occupied by each denomination,
	 *if there are any of that denomination
	 **/
	enum denom_ind {
	    FIVE_CENTS_IND,
	    TEN_CENTS_IND,
	    TWENTY_CENTS_IND,
	    FIFTY_CENTS_IND,
	    ONE_DOLLAR_IND,
	    TWO_DOLLAR_IND,
	    FIVE_DOLLAR_IND,
	    TEN_DOLLAR_IND
	};
	
	enum denom_val {
	    FIVE_CENTS_VAL = 5,
	    TEN_CENTS_VAL = 10,
	    TWENTY_CENTS_VAL = 20,
	    FIFTY_CENTS_VAL = 50,
	    ONE_DOLLAR_VAL = 100,
	    TWO_DOLLAR_VAL = 200,
	    FIVE_DOLLAR_VAL = 500,
	    TEN_DOLLAR_VAL = 1000
	};
	
	struct denomination {
	    enum denom_ind index;
	    enum denom_val value;
	    int count;
	};
	
	struct currency {
	    int dollars;
	    int cents;
	};
	
	#define NUM_DENOMS 8
	#define MAX_CHANGES 50
	
	typedef struct denomination cash_register[NUM_DENOMS];
	typedef struct currency change_requests[MAX_CHANGES];
"7	LINE	0
	#include "options.h"
	
	#include <assert.h>
	#include <ctype.h>
	
	#include "menu.h"
	
	#define ANSWERWIDTH 5
	#define SCREENWIDTH 80
	void read_rest_of_line(void);
	
	/**
	 * This file contains the implementations of the different options that are
	 * part of the assignment. This file should contain only the logic to implement
	 * each function and return values. It should not contain any input or output.
	 * If you need to do input or output, you must expose functions in the menu.c
	 * and menu.h library and call those functions in this module.
	 **/
	
	/**
	 * reverse_string(): takes as an argument a string that you must reverse
	 *inplace. You must not move the nul terminator but must swap each char in the
	 *first half of the string to the appropriate location in the second half of the
	 * string and vice-versa.
	 **/
	void reverse_string(char str[]) {
	    /*note-normal_output was provided in menu.c for usage
	     * its job is to process strings*/
	    int g;
	    int count;
	    char line[SCREENWIDTH + 1];
	    normal_output(
	        "Please enter a string to reverse "
	        "(maximum of 80 characters): ");
	
	    /* BOOLEAN success = FALSE;*/
	    fgets(line, SCREENWIDTH + 1, stdin);
	    line[strlen(line) - 1] = 0;
	    /*printf("You answered: %s\n", line);*/
	
	    str = (char*)malloc(sizeof(line));
	    memcpy(str, line, sizeof(line));
	
	    for (g = 0; str[g]; ++g) {
	        if (str[g] != '\n') {
	            count++;
	        }
	    }
	    if (count > 80) {
	        printf("Error: input was too long. Please try again.\n");
"8	LINE	0
	#include "options.h"
	
	#include <assert.h>
	#include <ctype.h>
	
	#include "menu.h"
	
	#define ANSWERWIDTH 5
	#define SCREENWIDTH 80
	void read_rest_of_line(void);
	
	/**
	 * This file contains the implementations of the different options that are
	 * part of the assignment. This file should contain only the logic to implement
	 * each function and return values. It should not contain any input or output.
	 * If you need to do input or output, you must expose functions in the menu.c
	 * and menu.h library and call those functions in this module.
	 **/
	
	/**
	 * reverse_string(): takes as an argument a string that you must reverse
	 *inplace. You must not move the nul terminator but must swap each char in the
	 *first half of the string to the appropriate location in the second half of the
	 * string and vice-versa.
	 **/
	void reverse_string(char str[]) {
	    /*note-normal_output was provided in menu.c for usage
	     * its job is to process strings*/
	    int g;
	    int count;
	    char line[SCREENWIDTH+1];
	    normal_output(
	        "Please enter a string to reverse "
	        "(maximum of 80 characters): ");
	
	    /* BOOLEAN success = FALSE;*/
	    fgets(line, SCREENWIDTH+1, stdin);
	    line[strlen(line) - 1] = 0;
	    /*printf("You answered: %s\n", line);*/
	
	    str = (char*)malloc(sizeof(line));
	    memcpy(str, line, sizeof(line));
	
	    for (g = 0; str[g]; ++g) {
	        if (str[g] != '\n') {
	            count++;
	        }
	    }
	    if (count > 80) {
	        str = 0;
"9	LINE	0
	#include "options.h"
	
	#include <assert.h>
	#include <ctype.h>
	
	#include "menu.h"
	
	#define ANSWERWIDTH 5
	#define SCREENWIDTH 80
	void read_rest_of_line(void);
	
	/**
	 * This file contains the implementations of the different options that are
	 * part of the assignment. This file should contain only the logic to implement
	 * each function and return values. It should not contain any input or output.
	 * If you need to do input or output, you must expose functions in the menu.c
	 * and menu.h library and call those functions in this module.
	 **/
	
	/**
	 * reverse_string(): takes as an argument a string that you must reverse
	 *inplace. You must not move the nul terminator but must swap each char in the
	 *first half of the string to the appropriate location in the second half of the
	 * string and vice-versa.
	 **/
	void reverse_string(char str[]) {
	    /*note-normal_output was provided in menu.c for usage
	     * its job is to process strings*/
	    int g;
	    int count;
	    char line[SCREENWIDTH + 10];
	    normal_output(
	        "Please enter a string to reverse "
	        "(maximum of 80 characters): ");
	
	    /* BOOLEAN success = FALSE;*/
	    fgets(line, SCREENWIDTH + 10, stdin);
	    line[strlen(line) - 1] = 0;
	    /*printf("You answered: %s\n", line);*/
	
	    str = (char*)malloc(sizeof(line));
	    memcpy(str, line, sizeof(line));
	
	    for (g = 0; str[g]; ++g) {
	        if (str[g] != '\n') {
	            count++;
	        }
	    }
	    if (count > 80) {
	        str = 0;
"a	CHAR	0
	':
"-	CHAR	0
	s

# global variables:

# File marks:
'0  29  4  ~/assignment-one/menu.c
'1  139  0  ~/assignment-one/main.c
'2  1  0  ~/assignment-one/options.h
'3  1  0  ~/assignment-one/shared.h
'4  140  8  ~/assignment-one/main.c
'5  1  0  ~/assignment-one/main.h
'6  96  0  ~/assignment-one/options.h
'7  49  20  ~/assignment-one/options.c
'8  226  28  ~/assignment-one/options.c
'9  226  29  ~/assignment-one/options.c

# Jumplist (newest first):
-'  29  4  ~/assignment-one/menu.c
-'  46  4  ~/assignment-one/menu.c
-'  139  0  ~/assignment-one/main.c
-'  140  0  ~/assignment-one/main.c
-'  1  0  ~/assignment-one/options.h
-'  96  0  ~/assignment-one/options.h
-'  1  0  ~/assignment-one/shared.h
-'  11  0  ~/assignment-one/shared.h
-'  1  0  ~/assignment-one/main.h
-'  2  0  ~/assignment-one/main.h
-'  49  20  ~/assignment-one/options.c
-'  226  4  ~/assignment-one/options.c
-'  108  4  ~/assignment-one/menu.c
-'  141  4  ~/assignment-one/main.c
-'  15  19  ~/assignment-one/menu.c
-'  225  20  ~/assignment-one/menu.c
-'  1  0  ~/main.c
-'  1  0  ~/options.c
-'  121  3  ~/assignment-one-answers/a1partb/menu.c
-'  81  4  ~/assignment-one-answers/a1partb/menu.c
-'  19  4  ~/assignment-one/menu.h
-'  40  0  ~/assignment-one/menu.h
-'  85  0  ~/assignment-one-answers/a1partb/main.c
-'  104  0  ~/assignment-one-answers/a1partb/main.c
-'  144  0  ~/assignment-one-answers/a1partb/menu.c
-'  47  0  ~/assignment-one-answers/a1partb/main.c
-'  77  0  ~/assignment-one-answers/a1partb/options.c
-'  23  0  ~/assignment-one-answers/a1partb/options.c
-'  4  0  ~/NERD_tree_2
-'  19  2  ~/NERD_tree_2
-'  1  0  ~/NERD_tree_2
-'  1  0  ~/NERD_tree_1
-'  19  2  ~/NERD_tree_1
-'  99  16  ~/assignment-one-answers/a1partb/main.c
-'  1  0  ~/assignment-one/main,c
-'  1  0  ~/assignment-one-answers/main.c
-'  2  0  ~/assignment-one-answers/main.c
-'  164  0  ~/assignment-one-answers/a1partb/menu.c
-'  147  0  ~/assignment-one-answers/a1partb/menu.c
-'  78  0  ~/assignment-one-answers/a1partb/options.c
-'  1  0  ~/assignment-one/menu_c
-'  1  0  ~/assignment-one-answers/a1partb/readme.txt
-'  1  0  ~/assignment-one-answers/a1partb/moo
-'  1  0  ~/assignment-one-answers/a1partb/main.c
-'  1  0  ~/week-three-act-two.c
-'  27  0  ~/tutorials/wk4/wk4-lab-one.c
-'  45  0  ~/tutorials/wk4/wk4-lab-one.c
-'  1  0  /home/el9/E70949/shared/prog_in_c/assignments/a1/a1partb/main.c
-'  165  0  /home/el9/E70949/shared/prog_in_c/assignments/a1/a1partb/menu.c
-'  1  0  /home/el9/E70949/shared/prog_in_c/assignments/a1/a1partb/menu.c
-'  46  0  ~/tutorials/wk4/wk4-lab-one.c
-'  26  0  ~/tutorials/wk4/wk4-lab-one
-'  1  0  ~/tutorials/wk4/wk4-lab-one
-'  15  0  ~/tutorials/wk4/fibonacci.c
-'  1  0  ~/tutorials/wk4/fibonacci.c
-'  36  0  ~/tutorials/wk4/factorial.c
-'  1  0  ~/tutorials/wk4/factorial.c
-'  1  17  ~/tutorials/wk4/iters/iter_fact.c
-'  52  8  ~/tutorials/wk3/week-three-act-four.c
-'  64  4  ~/tutorials/wk3/week-three-act-four.c
-'  56  0  ~/tutorials/wk2/read_rest_of_line.c
-'  1  0  ~/tutorials/wk2/read_rest_of_line.c
-'  1  0  ~/tutorials/wk3/strtol_exercise.c
-'  56  2  ~/tutorials/wk3/read_rest_of_line.c
-'  57  0  ~/tutorials/wk3/read_rest_of_line.c
-'  9  0  ~/tutorials/wk3/week-three-act-two.c
-'  47  4  ~/tutorials/wk3/week-three-act-two.c
-'  8  28  ~/tutorials/wk3/week-three-act-three.c
-'  16  0  ~/tutorials/wk3/week-three-act-three.c
-'  1  0  ~/tutorials/wk3/read_rest_of_the_line.c
-'  2  0  ~/tutorials/wk3/read_rest_of_the_line.c
-'  1  0  /home/el9/E70949/shared/prog_in_c/lectures/Week-03/read_rest_of_line.c
-'  10  0  ~/tutorials/wk3/week-three-act-one.c
-'  37  0  ~/tutorials/wk3/week-three-act-one.c
-'  1  0  ~/tutorials/wk3/week-three-act-one
-'  2  0  ~/week-three-act-two.c
-'  1  0  ~/tutorials/wk3/week3-act-one.c
-'  1  0  ~/tutorials/wk3/getname.c
-'  6  4  ~/tutorials/wk3/scanf-demo.c
-'  13  4  ~/tutorials/wk3/scanf-demo.c
-'  67  0  /home/el9/E70949/shared/prog_in_c/examples/InputValidation/getString-advanced.c
-'  1  0  /home/el9/E70949/shared/prog_in_c/examples/InputValidation/getString-advanced.c
-'  15  0  /home/el9/E70949/shared/prog_in_c/examples/InputValidation/getString-basic.c
-'  1  0  /home/el9/E70949/shared/prog_in_c/examples/InputValidation/getString-basic.c
-'  1  0  ~/tutorials/wk3/week-three-activityone.c
-'  1  0  ~/week-three-activity-two.c
-'  1  0  ~/tutorials/wk3/week-three-activity-two.c
-'  76  0  ~/tutorials/wk3/size.c
-'  1  0  ~/tutorials/wk2/rug.c
-'  1  0  ~/tutorials/wk2/dowhile.c
-'  20  8  ~/tutorials/wk2/whileglt.c
-'  38  0  ~/tutorials/wk2/star-four.c
-'  1  0  ~/tutorials/wk2/star-four.c
-'  1  0  ~/tutorials/wk3/size.c
-'  1  0  ~/tutorials/wk3/getchars.c
-'  21  0  ~/tutorials/wk3/getchars.c
-'  1  0  ~/tutorials/wk3/marathon.c
-'  1  0  ~/tutorials/wk3/read_res_of_line.c
-'  227  8  ~/assignment-one/options.c

# History of marks within files (newest to oldest):

> ~/assignment-one/menu.c
	"	29	4
	+	226	0
	+	226	1
	+	226	1
	+	226	1
	+	226	0
	+	226	16
	+	226	0
	+	226	4
	+	226	26
	+	226	33
	+	226	16
	+	226	21
	+	226	28
	+	226	38
	+	226	24
	+	226	29
	+	226	22
	+	226	0
	+	226	46
	+	226	10
	+	226	10
	+	226	9
	+	226	6
	+	226	37
	+	226	28
	+	226	9
	+	226	4
	+	226	12
	+	226	13
	+	226	9
	+	226	0
	+	226	15
	+	226	9
	+	226	5
	+	226	47
	+	226	30
	+	226	49
	+	226	23
	+	226	0
	+	226	0
	+	226	6
	+	226	6
	+	226	12
	+	226	14
	+	226	0
	+	226	8
	+	226	23
	+	226	8
	+	226	14
	+	226	12
	+	226	0
	+	226	10
	+	226	10
	+	226	35
	+	226	37
	+	226	14
	+	226	33
	+	226	37
	+	226	0
	+	226	9
	+	226	0
	+	226	22
	+	226	0
	+	226	4
	+	226	5
	+	226	4
	+	226	4
	+	226	0
	+	226	4
	+	226	4
	+	226	4
	+	226	5
	+	226	4
	+	226	4
	+	226	4
	+	226	0
	+	226	19
	+	226	16
	+	226	16
	+	226	20
	+	226	30
	+	226	39
	+	226	24
	+	226	55
	+	226	35
	+	226	0
	+	226	0
	+	226	6
	+	226	30
	+	226	0
	+	226	0
	+	226	26
	+	226	35
	+	226	11
	+	226	0
	+	226	54
	+	226	11
	+	226	13
	+	226	20
	+	226	16

> ~/tutorials/wk3/read_rest_of_line.c
	"	1	5
	+	57	0
	+	57	56
	+	57	0
	+	57	2
	+	57	22
	+	57	1
	+	57	0
	+	57	14

> ~/assignment-one/options.c
	"	57	27
	+	219	0
	+	219	26
	+	219	19
	+	219	19
	+	219	1
	+	219	6
	+	219	1
	+	219	17
	+	219	19
	+	219	4
	+	219	4
	+	219	4
	+	219	11
	+	219	4
	+	219	4
	+	219	4
	+	219	19
	+	219	4
	+	219	0
	+	219	65
	+	219	0
	+	219	0
	+	219	25
	+	219	4
	+	219	5
	+	219	0
	+	219	0
	+	219	0
	+	219	17
	+	219	10
	+	219	27
	+	219	14
	+	219	12
	+	219	37
	+	219	0
	+	219	14
	+	219	8
	+	219	17
	+	219	20
	+	219	30
	+	219	27
	+	219	33
	+	219	65
	+	219	0
	+	219	0
	+	219	0
	+	219	80
	+	219	63
	+	219	54
	+	219	63
	+	219	22
	+	219	75
	+	219	27
	+	219	8
	+	219	27
	+	219	63
	+	219	62
	+	219	63
	+	219	51
	+	219	66
	+	219	74
	+	219	49
	+	219	34
	+	219	60
	+	219	60
	+	219	25
	+	219	60
	+	219	61
	+	219	66
	+	219	74
	+	219	27
	+	219	8
	+	219	40
	+	219	62
	+	219	8
	+	219	26
	+	219	0
	+	219	64
	+	219	31
	+	219	71
	+	219	24
	+	219	23
	+	219	27
	+	219	34
	+	219	37
	+	219	27
	+	219	0
	+	219	0
	+	219	27
	+	219	0
	+	219	0
	+	219	22
	+	219	27
	+	219	0
	+	219	27
	+	219	8
	+	219	17
	+	219	36
	+	219	58
	+	219	0

> /home/el9/E70949/shared/prog_in_c/lectures/Week-04/recursiveprint.c
	"	20	0

> ~/assignment-one/main.c
	"	64	4
	+	141	39
	+	141	49
	+	141	18
	+	141	18
	+	141	32
	+	141	9
	+	141	37
	+	141	9
	+	141	13
	+	141	32
	+	141	27
	+	141	27
	+	141	62
	+	141	47
	+	141	54
	+	141	60
	+	141	29
	+	141	13
	+	141	0
	+	141	26
	+	141	0
	+	141	14
	+	141	16
	+	141	0
	+	141	29
	+	141	32
	+	141	36
	+	141	38
	+	141	12
	+	141	16
	+	141	0
	+	141	52
	+	141	22
	+	141	19
	+	141	55
	+	141	4
	+	141	14
	+	141	27
	+	141	43
	+	141	32
	+	141	40
	+	141	0
	+	141	12
	+	141	16
	+	141	11
	+	141	0
	+	141	16
	+	141	10
	+	141	10
	+	141	4
	+	141	0
	+	141	39
	+	141	7
	+	141	23
	+	141	10
	+	141	4
	+	141	10
	+	141	8
	+	141	15
	+	141	38
	+	141	42
	+	141	12
	+	141	51
	+	141	20
	+	141	40
	+	141	10
	+	141	37
	+	141	31
	+	141	8
	+	141	0
	+	141	31
	+	141	26
	+	141	23
	+	141	29
	+	141	0
	+	141	4
	+	141	9
	+	141	29
	+	141	6
	+	141	26
	+	141	31
	+	141	39
	+	141	36
	+	141	24
	+	141	24
	+	141	25
	+	141	0
	+	141	4
	+	141	27
	+	141	33
	+	141	0
	+	141	6
	+	141	31
	+	141	1
	+	141	0
	+	141	0
	+	141	29
	+	141	8
	+	141	19
	+	141	4

> ~/tutorials/wk3/rest_of_line.c
	"	1	0

> ~/tutorials/wk3/rest_of_the_line.c
	"	1	0

> ~/options.c
	"	1	0

> ~/assignment-one/options.h
	"	1	0
	+	96	23
	+	96	56

> ~/assignment-one/shared.h
	"	1	0

> ~/assignment-one/main.h
	"	1	0

> ~/tutorials/wk3/week-three-act-three.c
	"	1	0

> ~/assignment-one/menu.h
	"	1	0
	+	40	19
	+	40	38
	+	40	18
	+	40	13
	+	40	15
	+	40	14
	+	40	19
	+	40	13
	+	40	14
	+	40	14

> ~/tutorials/wk3/read_res_of_line.c
	"	1	0

> ~/tutorials/wk3/week-tree-act-two.c
	"	1	0

> ~/tutorials/wk3/week-three-act-four.c
	"	1	0

> ~/tutorials/wk3/week-four-act-four.c
	"	1	0

> ~/main.c
	"	1	0

> /home/el9/E70949/shared/prog_in_c/tutes/old/week4_tute_sp4_2017/random.c
	"	90	0

> ~/assignment-one/option.c
	"	1	0
